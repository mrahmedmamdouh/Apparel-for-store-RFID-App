/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package co.kr.bluebird.rfid.app.bbrfidbtdemo;

public final class R {
  public static final class array {
    public static final int barcodehw_array=0x7f010000;
    public static final int buzzerlevel_array=0x7f010001;
    public static final int functions_array=0x7f010002;
    public static final int items_array=0x7f010003;
    public static final int multi_number_array=0x7f010004;
    public static final int on_off_array=0x7f010005;
    public static final int region_array=0x7f010006;
    public static final int sel_flag_array=0x7f010007;
    public static final int selection_action_array=0x7f010008;
    public static final int selection_memtype_array=0x7f010009;
    public static final int session_array=0x7f01000a;
    public static final int sleep_array=0x7f01000b;
    public static final int target_array=0x7f01000c;
    public static final int trigger_array=0x7f01000d;
  }
  public static final class attr {
    /**
     * Alpha multiplier applied to the base color.
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f020000;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f020001;
    /**
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f020002;
    /**
     * The authority of the Font Provider to be used for the request.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f020003;
    /**
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f020004;
    /**
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f020005;
    /**
     * The length of the timeout during fetching.
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f020006;
    /**
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f020007;
    /**
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f020008;
    /**
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f020009;
    /**
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f02000a;
    /**
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f02000b;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f02000c;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f02000d;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f02000e;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f02000f;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f020010;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f020011;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f020012;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f020013;
    /**
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f020014;
  }
  public static final class color {
    public static final int bat_center=0x7f030000;
    public static final int bat_end=0x7f030001;
    public static final int bat_start=0x7f030002;
    public static final int center=0x7f030003;
    public static final int end=0x7f030004;
    public static final int notification_action_color_filter=0x7f030005;
    public static final int notification_icon_bg_color=0x7f030006;
    public static final int notification_material_background_media_default_color=0x7f030007;
    public static final int primary_text_default_material_dark=0x7f030008;
    public static final int ripple_material_light=0x7f030009;
    public static final int secondary_text_default_material_dark=0x7f03000a;
    public static final int secondary_text_default_material_light=0x7f03000b;
    public static final int start=0x7f03000c;
  }
  public static final class dimen {
    public static final int activity_horizontal_margin=0x7f040000;
    public static final int activity_vertical_margin=0x7f040001;
    public static final int compat_button_inset_horizontal_material=0x7f040002;
    public static final int compat_button_inset_vertical_material=0x7f040003;
    public static final int compat_button_padding_horizontal_material=0x7f040004;
    public static final int compat_button_padding_vertical_material=0x7f040005;
    public static final int compat_control_corner_material=0x7f040006;
    public static final int compat_notification_large_icon_max_height=0x7f040007;
    public static final int compat_notification_large_icon_max_width=0x7f040008;
    public static final int notification_action_icon_size=0x7f040009;
    public static final int notification_action_text_size=0x7f04000a;
    public static final int notification_big_circle_margin=0x7f04000b;
    public static final int notification_content_margin_start=0x7f04000c;
    public static final int notification_large_icon_height=0x7f04000d;
    public static final int notification_large_icon_width=0x7f04000e;
    public static final int notification_main_column_padding_top=0x7f04000f;
    public static final int notification_media_narrow_margin=0x7f040010;
    public static final int notification_right_icon_size=0x7f040011;
    public static final int notification_right_side_padding_top=0x7f040012;
    public static final int notification_small_icon_background_padding=0x7f040013;
    public static final int notification_small_icon_size_as_large=0x7f040014;
    public static final int notification_subtext_size=0x7f040015;
    public static final int notification_top_pad=0x7f040016;
    public static final int notification_top_pad_large_text=0x7f040017;
    public static final int subtitle_corner_radius=0x7f040018;
    public static final int subtitle_outline_width=0x7f040019;
    public static final int subtitle_shadow_offset=0x7f04001a;
    public static final int subtitle_shadow_radius=0x7f04001b;
  }
  public static final class drawable {
    public static final int battery_progress=0x7f050000;
    public static final int connected=0x7f050001;
    public static final int home=0x7f050002;
    public static final int ic_back=0x7f050003;
    public static final int ic_barcode=0x7f050004;
    public static final int ic_battery=0x7f050005;
    public static final int ic_connectivity=0x7f050006;
    public static final int ic_info=0x7f050007;
    public static final int ic_inven=0x7f050008;
    public static final int ic_launcher=0x7f050009;
    public static final int ic_rapid=0x7f05000a;
    public static final int ic_rf_access=0x7f05000b;
    public static final int ic_rf_config=0x7f05000c;
    public static final int ic_rf_sel=0x7f05000d;
    public static final int ic_sd_func=0x7f05000e;
    public static final int notification_action_background=0x7f05000f;
    public static final int notification_bg=0x7f050010;
    public static final int notification_bg_low=0x7f050011;
    public static final int notification_bg_low_normal=0x7f050012;
    public static final int notification_bg_low_pressed=0x7f050013;
    public static final int notification_bg_normal=0x7f050014;
    public static final int notification_bg_normal_pressed=0x7f050015;
    public static final int notification_icon_background=0x7f050016;
    public static final int notification_template_icon_bg=0x7f050017;
    public static final int notification_template_icon_low_bg=0x7f050018;
    public static final int notification_tile_bg=0x7f050019;
    public static final int notify_panel_notification_icon_bg=0x7f05001a;
    public static final int vertical_progress=0x7f05001b;
  }
  public static final class id {
    public static final int access_list=0x7f060000;
    public static final int accesstime_edit=0x7f060001;
    public static final int action0=0x7f060002;
    public static final int action_connected=0x7f060003;
    public static final int action_container=0x7f060004;
    public static final int action_divider=0x7f060005;
    public static final int action_home=0x7f060006;
    public static final int action_image=0x7f060007;
    public static final int action_spin=0x7f060008;
    public static final int action_text=0x7f060009;
    public static final int action_textview=0x7f06000a;
    public static final int actions=0x7f06000b;
    public static final int all=0x7f06000c;
    public static final int async=0x7f06000d;
    public static final int back_button=0x7f06000e;
    public static final int bar_bt=0x7f06000f;
    public static final int barcode_hw_key_spin=0x7f060010;
    public static final int barcode_multi_number_spin=0x7f060011;
    public static final int barcode_trigger_spin=0x7f060012;
    public static final int bat_bt=0x7f060013;
    public static final int batt_progress=0x7f060014;
    public static final int battery_state_textview=0x7f060015;
    public static final int battery_text=0x7f060016;
    public static final int blocking=0x7f060017;
    public static final int bottom=0x7f060018;
    public static final int bt_barcode_pause=0x7f060019;
    public static final int bt_barcode_press=0x7f06001a;
    public static final int bt_barcode_release=0x7f06001b;
    public static final int bt_barcode_resume=0x7f06001c;
    public static final int bt_bat=0x7f06001d;
    public static final int bt_buzzer=0x7f06001e;
    public static final int bt_charge=0x7f06001f;
    public static final int bt_disable=0x7f060020;
    public static final int bt_disable_multi=0x7f060021;
    public static final int bt_disconnect=0x7f060022;
    public static final int bt_enable=0x7f060023;
    public static final int bt_enable_multi=0x7f060024;
    public static final int bt_firm=0x7f060025;
    public static final int bt_get_available_region=0x7f060026;
    public static final int bt_get_barcode_state=0x7f060027;
    public static final int bt_get_bt_name=0x7f060028;
    public static final int bt_get_bt_ver=0x7f060029;
    public static final int bt_get_buzzer=0x7f06002a;
    public static final int bt_get_hw_key=0x7f06002b;
    public static final int bt_get_mode_key_state=0x7f06002c;
    public static final int bt_get_multi_number=0x7f06002d;
    public static final int bt_get_multi_scan_type_state=0x7f06002e;
    public static final int bt_get_multi_state=0x7f06002f;
    public static final int bt_get_region=0x7f060030;
    public static final int bt_get_rssi=0x7f060031;
    public static final int bt_get_serial=0x7f060032;
    public static final int bt_get_sleep=0x7f060033;
    public static final int bt_get_target=0x7f060034;
    public static final int bt_get_toggle=0x7f060035;
    public static final int bt_get_trg_key_state=0x7f060036;
    public static final int bt_get_trigger=0x7f060037;
    public static final int bt_getbuzzermute=0x7f060038;
    public static final int bt_mode_key_disable=0x7f060039;
    public static final int bt_mode_key_enable=0x7f06003a;
    public static final int bt_multi_scan_type_disable=0x7f06003b;
    public static final int bt_multi_scan_type_enable=0x7f06003c;
    public static final int bt_remove_pair=0x7f06003d;
    public static final int bt_scan=0x7f06003e;
    public static final int bt_set_bt_name=0x7f06003f;
    public static final int bt_set_hw_key=0x7f060040;
    public static final int bt_set_multi_number=0x7f060041;
    public static final int bt_set_region=0x7f060042;
    public static final int bt_set_rssi=0x7f060043;
    public static final int bt_set_sd_default_all=0x7f060044;
    public static final int bt_set_target=0x7f060045;
    public static final int bt_set_toggle=0x7f060046;
    public static final int bt_set_trigger=0x7f060047;
    public static final int bt_setbuzzermute=0x7f060048;
    public static final int bt_setbuzzernoisy=0x7f060049;
    public static final int bt_settigger_barcode=0x7f06004a;
    public static final int bt_settigger_rfid=0x7f06004b;
    public static final int bt_sleep=0x7f06004c;
    public static final int bt_state=0x7f06004d;
    public static final int bt_stop_scan=0x7f06004e;
    public static final int bt_trg_key_disable=0x7f06004f;
    public static final int bt_trg_key_enable=0x7f060050;
    public static final int bt_trigger=0x7f060051;
    public static final int bt_update_firm=0x7f060052;
    public static final int buzzer_lv_spin=0x7f060053;
    public static final int cancel_action=0x7f060054;
    public static final int center=0x7f060055;
    public static final int center_horizontal=0x7f060056;
    public static final int center_vertical=0x7f060057;
    public static final int chronometer=0x7f060058;
    public static final int ci_logo=0x7f060059;
    public static final int ci_logo2=0x7f06005a;
    public static final int clear_button=0x7f06005b;
    public static final int clip_horizontal=0x7f06005c;
    public static final int clip_vertical=0x7f06005d;
    public static final int connect_bt=0x7f06005e;
    public static final int connected_device_textview=0x7f06005f;
    public static final int content=0x7f060060;
    public static final int count_text=0x7f060061;
    public static final int data_textview=0x7f060062;
    public static final int device_list=0x7f060063;
    public static final int drawer_layout=0x7f060064;
    public static final int duty_edit=0x7f060065;
    public static final int dwell_edit=0x7f060066;
    public static final int end=0x7f060067;
    public static final int end_padder=0x7f060068;
    public static final int file_switch=0x7f060069;
    public static final int fill=0x7f06006a;
    public static final int fill_horizontal=0x7f06006b;
    public static final int fill_vertical=0x7f06006c;
    public static final int filter_switch=0x7f06006d;
    public static final int forever=0x7f06006e;
    public static final int get_accesstime_button=0x7f06006f;
    public static final int get_duty_button=0x7f060070;
    public static final int get_dwell_button=0x7f060071;
    public static final int get_power_button=0x7f060072;
    public static final int get_rfmode_button=0x7f060073;
    public static final int get_selection=0x7f060074;
    public static final int get_singulation_button=0x7f060075;
    public static final int icon=0x7f060076;
    public static final int icon_group=0x7f060077;
    public static final int info=0x7f060078;
    public static final int info_bt=0x7f060079;
    public static final int inv_bt=0x7f06007a;
    public static final int inven_button=0x7f06007b;
    public static final int italic=0x7f06007c;
    public static final int left=0x7f06007d;
    public static final int left_drawer=0x7f06007e;
    public static final int line1=0x7f06007f;
    public static final int line3=0x7f060080;
    public static final int mDupText=0x7f060081;
    public static final int mImage=0x7f060082;
    public static final int mRssiText=0x7f060083;
    public static final int mTagText=0x7f060084;
    public static final int mask_edit=0x7f060085;
    public static final int mask_length_edit=0x7f060086;
    public static final int mask_switch=0x7f060087;
    public static final int media_actions=0x7f060088;
    public static final int memtype_spin=0x7f060089;
    public static final int message_textview=0x7f06008a;
    public static final int none=0x7f06008b;
    public static final int normal=0x7f06008c;
    public static final int notification_background=0x7f06008d;
    public static final int notification_main_column=0x7f06008e;
    public static final int notification_main_column_container=0x7f06008f;
    public static final int pc_switch=0x7f060090;
    public static final int power_edit=0x7f060091;
    public static final int rapid_bt=0x7f060092;
    public static final int region_spin=0x7f060093;
    public static final int remove_criteria=0x7f060094;
    public static final int remove_selection=0x7f060095;
    public static final int rfacc_bt=0x7f060096;
    public static final int rfconf_bt=0x7f060097;
    public static final int rfid_list=0x7f060098;
    public static final int rfmode_edit=0x7f060099;
    public static final int rfsel_bt=0x7f06009a;
    public static final int right=0x7f06009b;
    public static final int right_icon=0x7f06009c;
    public static final int right_side=0x7f06009d;
    public static final int rssi_spin=0x7f06009e;
    public static final int rssi_switch=0x7f06009f;
    public static final int scan_progress=0x7f0600a0;
    public static final int sdfunc_bt=0x7f0600a1;
    public static final int sel_flag_spin=0x7f0600a2;
    public static final int session_spin=0x7f0600a3;
    public static final int set_accesstime_button=0x7f0600a4;
    public static final int set_criteria=0x7f0600a5;
    public static final int set_duty_button=0x7f0600a6;
    public static final int set_dwell_button=0x7f0600a7;
    public static final int set_power_button=0x7f0600a8;
    public static final int set_rfmode_button=0x7f0600a9;
    public static final int set_selection=0x7f0600aa;
    public static final int set_singulation_button=0x7f0600ab;
    public static final int singulation_edit=0x7f0600ac;
    public static final int sleep_spin=0x7f0600ad;
    public static final int sound_switch=0x7f0600ae;
    public static final int speed_avr_count_text=0x7f0600af;
    public static final int speed_count_text=0x7f0600b0;
    public static final int start=0x7f0600b1;
    public static final int start_pos_edit=0x7f0600b2;
    public static final int status_bar_latest_event_content=0x7f0600b3;
    public static final int stop_inven_button=0x7f0600b4;
    public static final int tag_list=0x7f0600b5;
    public static final int tag_list_container=0x7f0600b6;
    public static final int tag_locate_container=0x7f0600b7;
    public static final int tag_locate_progress=0x7f0600b8;
    public static final int tag_locate_text=0x7f0600b9;
    public static final int tag_transition_group=0x7f0600ba;
    public static final int tag_unhandled_key_event_manager=0x7f0600bb;
    public static final int tag_unhandled_key_listeners=0x7f0600bc;
    public static final int target_spin=0x7f0600bd;
    public static final int text=0x7f0600be;
    public static final int text2=0x7f0600bf;
    public static final int text_criteria=0x7f0600c0;
    public static final int time=0x7f0600c1;
    public static final int timer_progress=0x7f0600c2;
    public static final int timer_text=0x7f0600c3;
    public static final int title=0x7f0600c4;
    public static final int toggle_spin=0x7f0600c5;
    public static final int toggle_switch=0x7f0600c6;
    public static final int top=0x7f0600c7;
    public static final int turbo_switch=0x7f0600c8;
    public static final int tv_app_version=0x7f0600c9;
    public static final int tv_bootloader_version=0x7f0600ca;
    public static final int tv_os_version=0x7f0600cb;
    public static final int tv_rf_lib_version=0x7f0600cc;
    public static final int tv_rfid_version=0x7f0600cd;
    public static final int tv_sd_bt_firm_version=0x7f0600ce;
    public static final int tv_sd_firm_version=0x7f0600cf;
    public static final int tv_sd_serial_number=0x7f0600d0;
    public static final int ui_layout=0x7f0600d1;
  }
  public static final class integer {
    public static final int cancel_button_image_alpha=0x7f070000;
    public static final int status_bar_notification_info_maxnum=0x7f070001;
  }
  public static final class layout {
    public static final int activity_main=0x7f080000;
    public static final int barcode_frag=0x7f080001;
    public static final int battery_frag=0x7f080002;
    public static final int connectivity_frag=0x7f080003;
    public static final int info_frag=0x7f080004;
    public static final int inventory_frag=0x7f080005;
    public static final int list_item=0x7f080006;
    public static final int notification_action=0x7f080007;
    public static final int notification_action_tombstone=0x7f080008;
    public static final int notification_media_action=0x7f080009;
    public static final int notification_media_cancel_action=0x7f08000a;
    public static final int notification_template_big_media=0x7f08000b;
    public static final int notification_template_big_media_custom=0x7f08000c;
    public static final int notification_template_big_media_narrow=0x7f08000d;
    public static final int notification_template_big_media_narrow_custom=0x7f08000e;
    public static final int notification_template_custom_big=0x7f08000f;
    public static final int notification_template_icon_group=0x7f080010;
    public static final int notification_template_lines_media=0x7f080011;
    public static final int notification_template_media=0x7f080012;
    public static final int notification_template_media_custom=0x7f080013;
    public static final int notification_template_part_chronometer=0x7f080014;
    public static final int notification_template_part_time=0x7f080015;
    public static final int rapid_frag=0x7f080016;
    public static final int rf_access_frag=0x7f080017;
    public static final int rf_config_frag=0x7f080018;
    public static final int rf_selection_frag=0x7f080019;
    public static final int sd_frag=0x7f08001a;
  }
  public static final class menu {
    public static final int main=0x7f090000;
  }
  public static final class raw {
    public static final int beep=0x7f0a0000;
  }
  public static final class string {
    public static final int action_settings=0x7f0b0000;
    public static final int app_name=0x7f0b0001;
    public static final int app_version_str=0x7f0b0002;
    public static final int available_regions_str=0x7f0b0003;
    public static final int avr_speed_str=0x7f0b0004;
    public static final int back_inv_str=0x7f0b0005;
    public static final int battery_state_str=0x7f0b0006;
    public static final int bootloader_version_str=0x7f0b0007;
    public static final int bt_state_str=0x7f0b0008;
    public static final int cancel_str=0x7f0b0009;
    public static final int clear_str=0x7f0b000a;
    public static final int connect_state_str=0x7f0b000b;
    public static final int connect_str=0x7f0b000c;
    public static final int connected_str=0x7f0b000d;
    public static final int connecting_str=0x7f0b000e;
    public static final int copy_str=0x7f0b000f;
    public static final int copyright_str=0x7f0b0010;
    public static final int count_des_str=0x7f0b0011;
    public static final int count_str=0x7f0b0012;
    public static final int disable_multi_str=0x7f0b0013;
    public static final int disable_str=0x7f0b0014;
    public static final int disconnect_str=0x7f0b0015;
    public static final int disconnected_str=0x7f0b0016;
    public static final int drawer_close=0x7f0b0017;
    public static final int drawer_open=0x7f0b0018;
    public static final int dup_str=0x7f0b0019;
    public static final int empty_str=0x7f0b001a;
    public static final int enable_multi_str=0x7f0b001b;
    public static final int enable_str=0x7f0b001c;
    public static final int file_str=0x7f0b001d;
    public static final int filter_off_str=0x7f0b001e;
    public static final int filter_on_str=0x7f0b001f;
    public static final int filter_str=0x7f0b0020;
    public static final int get_accesstime_str=0x7f0b0021;
    public static final int get_available_region_str=0x7f0b0022;
    public static final int get_barcode_hw_str=0x7f0b0023;
    public static final int get_barcode_state_str=0x7f0b0024;
    public static final int get_bat_str=0x7f0b0025;
    public static final int get_bt_name=0x7f0b0026;
    public static final int get_bt_version_str=0x7f0b0027;
    public static final int get_buzzer_state_str=0x7f0b0028;
    public static final int get_buzzer_str=0x7f0b0029;
    public static final int get_charge_str=0x7f0b002a;
    public static final int get_con_str=0x7f0b002b;
    public static final int get_duty_str=0x7f0b002c;
    public static final int get_dwell_str=0x7f0b002d;
    public static final int get_firm_str=0x7f0b002e;
    public static final int get_mode_key_enable_state_str=0x7f0b002f;
    public static final int get_multi_count_str=0x7f0b0030;
    public static final int get_multi_scan_type_str=0x7f0b0031;
    public static final int get_multi_str=0x7f0b0032;
    public static final int get_power_str=0x7f0b0033;
    public static final int get_region_str=0x7f0b0034;
    public static final int get_rfmode_str=0x7f0b0035;
    public static final int get_rssi_str=0x7f0b0036;
    public static final int get_selection_str=0x7f0b0037;
    public static final int get_serial_str=0x7f0b0038;
    public static final int get_sing_str=0x7f0b0039;
    public static final int get_sleep_str=0x7f0b003a;
    public static final int get_target_str=0x7f0b003b;
    public static final int get_toggle_str=0x7f0b003c;
    public static final int get_trg_key_enable_state_str=0x7f0b003d;
    public static final int get_trg_str=0x7f0b003e;
    public static final int get_trigger_str=0x7f0b003f;
    public static final int hello_world=0x7f0b0040;
    public static final int home_str=0x7f0b0041;
    public static final int inven_str=0x7f0b0042;
    public static final int loc_str=0x7f0b0043;
    public static final int locating_str=0x7f0b0044;
    public static final int m_bar_str=0x7f0b0045;
    public static final int m_bat_str=0x7f0b0046;
    public static final int m_connect_str=0x7f0b0047;
    public static final int m_info_str=0x7f0b0048;
    public static final int m_inv_str=0x7f0b0049;
    public static final int m_rapid_str=0x7f0b004a;
    public static final int m_rf_acc_str=0x7f0b004b;
    public static final int m_rf_conf_str=0x7f0b004c;
    public static final int m_rf_sel_str=0x7f0b004d;
    public static final int m_sd_func_str=0x7f0b004e;
    public static final int no_sleep_str=0x7f0b004f;
    public static final int no_str=0x7f0b0050;
    public static final int ok_str=0x7f0b0051;
    public static final int os_version_str=0x7f0b0052;
    public static final int pause_barcode_str=0x7f0b0053;
    public static final int pause_str=0x7f0b0054;
    public static final int percent_str=0x7f0b0055;
    public static final int please_input_name=0x7f0b0056;
    public static final int press_barcode_str=0x7f0b0057;
    public static final int read_data_str=0x7f0b0058;
    public static final int read_start_str=0x7f0b0059;
    public static final int read_stop_str=0x7f0b005a;
    public static final int read_time_str=0x7f0b005b;
    public static final int received_data_str=0x7f0b005c;
    public static final int received_msg_str=0x7f0b005d;
    public static final int release_barcode_str=0x7f0b005e;
    public static final int remove_criteria_str=0x7f0b005f;
    public static final int remove_pair_str=0x7f0b0060;
    public static final int remove_pc_str=0x7f0b0061;
    public static final int remove_selection_str=0x7f0b0062;
    public static final int resume_barcode_str=0x7f0b0063;
    public static final int rf_lib_version_str=0x7f0b0064;
    public static final int rf_module_version_str=0x7f0b0065;
    public static final int rssi_str=0x7f0b0066;
    public static final int rssi_str2=0x7f0b0067;
    public static final int sd_bt_version_str=0x7f0b0068;
    public static final int sd_lib_version_str=0x7f0b0069;
    public static final int sd_serial_str=0x7f0b006a;
    public static final int search_str=0x7f0b006b;
    public static final int sel_action_str=0x7f0b006c;
    public static final int sel_flag_str=0x7f0b006d;
    public static final int sel_mask_length_str=0x7f0b006e;
    public static final int sel_mask_str=0x7f0b006f;
    public static final int sel_mem_type_str=0x7f0b0070;
    public static final int sel_start_pos_str=0x7f0b0071;
    public static final int selection_str=0x7f0b0072;
    public static final int session_str=0x7f0b0073;
    public static final int set_accesstime_str=0x7f0b0074;
    public static final int set_barcode_hw_str=0x7f0b0075;
    public static final int set_barcode_str=0x7f0b0076;
    public static final int set_bt_name=0x7f0b0077;
    public static final int set_buzzer_mute_str=0x7f0b0078;
    public static final int set_buzzer_noisy_str=0x7f0b0079;
    public static final int set_buzzer_str=0x7f0b007a;
    public static final int set_criteria_str=0x7f0b007b;
    public static final int set_default_all=0x7f0b007c;
    public static final int set_duty_str=0x7f0b007d;
    public static final int set_dwell_str=0x7f0b007e;
    public static final int set_mode_key_disable_str=0x7f0b007f;
    public static final int set_mode_key_enable_str=0x7f0b0080;
    public static final int set_multi_count_str=0x7f0b0081;
    public static final int set_multi_scan_type_disable_str=0x7f0b0082;
    public static final int set_multi_scan_type_enable_str=0x7f0b0083;
    public static final int set_power_str=0x7f0b0084;
    public static final int set_region_str=0x7f0b0085;
    public static final int set_rfid_str=0x7f0b0086;
    public static final int set_rfmode_str=0x7f0b0087;
    public static final int set_rssi_str=0x7f0b0088;
    public static final int set_selection_str=0x7f0b0089;
    public static final int set_serial_str=0x7f0b008a;
    public static final int set_sing_str=0x7f0b008b;
    public static final int set_sleep_str=0x7f0b008c;
    public static final int set_target_str=0x7f0b008d;
    public static final int set_toggle_str=0x7f0b008e;
    public static final int set_trg_key_disable_str=0x7f0b008f;
    public static final int set_trg_key_enable_str=0x7f0b0090;
    public static final int set_trigger_str=0x7f0b0091;
    public static final int simple_config_str=0x7f0b0092;
    public static final int sled_connected_str=0x7f0b0093;
    public static final int sled_info_str=0x7f0b0094;
    public static final int sleep_str=0x7f0b0095;
    public static final int sound_str=0x7f0b0096;
    public static final int speed_count_str=0x7f0b0097;
    public static final int speed_postfix_str=0x7f0b0098;
    public static final int speed_str=0x7f0b0099;
    public static final int start_str=0x7f0b009a;
    public static final int status_bar_notification_info_overflow=0x7f0b009b;
    public static final int stop_inven_str=0x7f0b009c;
    public static final int stop_search_str=0x7f0b009d;
    public static final int stop_track_str=0x7f0b009e;
    public static final int time_postfix_str=0x7f0b009f;
    public static final int timer_des_str=0x7f0b00a0;
    public static final int timer_str=0x7f0b00a1;
    public static final int toggle_str=0x7f0b00a2;
    public static final int track_str=0x7f0b00a3;
    public static final int turbo_str=0x7f0b00a4;
    public static final int update_firm_str=0x7f0b00a5;
    public static final int update_rf_firm_str=0x7f0b00a6;
    public static final int update_sled_bootloader_str=0x7f0b00a7;
    public static final int update_sled_firmware_str=0x7f0b00a8;
    public static final int update_warning_rfid_str=0x7f0b00a9;
    public static final int update_warning_sled_str=0x7f0b00aa;
    public static final int user_action_str=0x7f0b00ab;
    public static final int version_str=0x7f0b00ac;
    public static final int want_tracking_str=0x7f0b00ad;
    public static final int warning_str=0x7f0b00ae;
    public static final int yes_str=0x7f0b00af;
  }
  public static final class style {
    public static final int AppBaseTheme=0x7f0c0000;
    public static final int AppTheme=0x7f0c0001;
    public static final int TextAppearance_Compat_Notification=0x7f0c0002;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0c0003;
    public static final int TextAppearance_Compat_Notification_Info_Media=0x7f0c0004;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0c0005;
    public static final int TextAppearance_Compat_Notification_Line2_Media=0x7f0c0006;
    public static final int TextAppearance_Compat_Notification_Media=0x7f0c0007;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0c0008;
    public static final int TextAppearance_Compat_Notification_Time_Media=0x7f0c0009;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0c000a;
    public static final int TextAppearance_Compat_Notification_Title_Media=0x7f0c000b;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0c000c;
    public static final int Widget_Compat_NotificationActionText=0x7f0c000d;
    public static final int Widget_Support_CoordinatorLayout=0x7f0c000e;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha co.kr.bluebird.rfid.app.bbrfidbtdemo:alpha}</code></td><td>Alpha multiplier applied to the base color.</td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_alpha
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x7f020000
    };
    /**
     * <p>
     * @attr description
     * Base color for this state.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>
     * @attr description
     * Alpha multiplier applied to the base color.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:alpha
     */
    public static final int ColorStateListItem_alpha=2;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines co.kr.bluebird.rfid.app.bbrfidbtdemo:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground co.kr.bluebird.rfid.app.bbrfidbtdemo:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f02000c, 0x7f020013
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f02000d, 0x7f02000e, 0x7f02000f, 
      0x7f020010, 0x7f020011, 0x7f020012
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderAuthority}</code></td><td>The authority of the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderCerts}</code></td><td>The sets of hashes for the certificates the provider should be signed with.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderFetchStrategy}</code></td><td>The strategy to be used when fetching font data from a font provider in XML layouts.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderFetchTimeout}</code></td><td>The length of the timeout during fetching.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderPackage}</code></td><td>The package for the Font Provider to be used for the request.</td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderQuery}</code></td><td>The query to be sent over to the provider.</td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     */
    public static final int[] FontFamily={
      0x7f020003, 0x7f020004, 0x7f020005, 0x7f020006, 
      0x7f020007, 0x7f020008
    };
    /**
     * <p>
     * @attr description
     * The authority of the Font Provider to be used for the request.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>
     * @attr description
     * The sets of hashes for the certificates the provider should be signed with. This is
     * used to verify the identity of the provider, and is only required if the provider is not
     * part of the system image. This value may point to one list or a list of lists, where each
     * individual list represents one collection of signature hashes. Refer to your font provider's
     * documentation for these values.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>
     * @attr description
     * The strategy to be used when fetching font data from a font provider in XML layouts.
     * This attribute is ignored when the resource is loaded from code, as it is equivalent to the
     * choice of API between {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int)} (blocking) and
     * {@link
     * androidx.core.content.res.ResourcesCompat#getFont(Context, int, FontCallback, Handler)}
     * (async).
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>
     * @attr description
     * The length of the timeout during fetching.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>
     * @attr description
     * The package for the Font Provider to be used for the request. This is used to verify
     * the identity of the provider.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>
     * @attr description
     * The query to be sent over to the provider. Refer to your font provider's documentation
     * on the format of this string.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font co.kr.bluebird.rfid.app.bbrfidbtdemo:font}</code></td><td>The reference to the font file to be used.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle co.kr.bluebird.rfid.app.bbrfidbtdemo:fontStyle}</code></td><td>The style of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings co.kr.bluebird.rfid.app.bbrfidbtdemo:fontVariationSettings}</code></td><td>The variation settings to be applied to the font.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight co.kr.bluebird.rfid.app.bbrfidbtdemo:fontWeight}</code></td><td>The weight of the given font file.</td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex co.kr.bluebird.rfid.app.bbrfidbtdemo:ttcIndex}</code></td><td>The index of the font in the tcc font file.</td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f020002, 0x7f020009, 0x7f02000a, 
      0x7f02000b, 0x7f020014
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>
     * @attr description
     * References to the framework attrs
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>
     * @attr description
     * The reference to the font file to be used. This should be a file in the res/font folder
     * and should therefore have an R reference value. E.g. @font/myfont
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>
     * @attr description
     * The style of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any style information in the font's header tables. If
     * unspecified, the value in the font's header tables will be used.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>
     * @attr description
     * The variation settings to be applied to the font. The string should be in the following
     * format: "'tag1' value1, 'tag2' value2, ...". If the default variation settings should be
     * used, or the font used does not support variation settings, this attribute needs not be
     * specified.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>
     * @attr description
     * The weight of the given font file. This will be used when the font is being loaded into
     * the font stack and will override any weight information in the font's header tables. Must
     * be a positive number, a multiple of 100, and between 100 and 900, inclusive. The most
     * common values are 400 for regular weight and 700 for bold weight. If unspecified, the value
     * in the font's header tables will be used.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>
     * @attr description
     * The index of the font in the tcc font file. If the font file referenced is not in the
     * tcc format, this attribute needs not be specified.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name co.kr.bluebird.rfid.app.bbrfidbtdemo:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>
     * @attr description
     * Start color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>
     * @attr description
     * End color of the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>
     * @attr description
     * Type of gradient. The default type is linear.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>
     * @attr description
     * X coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>
     * @attr description
     * Y coordinate of the center of the gradient within the path.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>
     * @attr description
     * Radius of the gradient, used only with radial gradient.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>
     * @attr description
     * Defines the tile mode of the gradient. SweepGradient doesn't support tiling.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>
     * @attr description
     * Optional center color.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>
     * @attr description
     * X coordinate of the start point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>
     * @attr description
     * Y coordinate of the start point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>
     * @attr description
     * X coordinate of the end point origin of the gradient.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>
     * @attr description
     * Y coordinate of the end point of the gradient within the shape.
     * Defined in same coordinates as the path itself
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>
     * @attr description
     * The current color for the offset inside the gradient.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>
     * @attr description
     * The offset (or ratio) of this current color item inside the gradient.
     * The value is only meaningful when it is between 0 and 1.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
  }
}